# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

###########################
### CUSTOMIZED DEFAULTS ###
###########################

set $mod Mod4

font pango:PragmataPro Liga 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec ~/.local/kitty.app/bin/kitty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -fn "PragmataPro Mono Liga"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left 50
bindsym $mod+Shift+j move down 50
bindsym $mod+Shift+k move up 50
bindsym $mod+Shift+l move right 50
bindsym $mod+Shift+semicolon move position center

focus_follows_mouse no

# Toggle split direction
bindsym $mod+v split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

#################
### RELOADING ###
#################

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

###################
### RESIZE MODE ###
###################

# resize window (you can also use the mouse for that)
mode "resize" {
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

##################
### WORKSPACES ###
##################

set $ws-browse 1:  browse
set $ws-work   2:  work
set $ws-tmux   3:  tmux
set $ws-nvim   4:  nvim
set $ws-comm   5:  comm

workspace "$ws-browse" output DP-3
workspace "$ws-work" output DP-3
workspace "$ws-tmux" output DP-0
workspace "$ws-nvim" output DP-3
workspace "$ws-comm" output DP-3

bindsym $mod+1 workspace $ws-browse
bindsym $mod+2 workspace $ws-work
bindsym $mod+3 workspace $ws-tmux
bindsym $mod+4 workspace $ws-nvim
bindsym $mod+5 workspace $ws-comm
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws-browse
bindsym $mod+Shift+2 move container to workspace $ws-work
bindsym $mod+Shift+3 move container to workspace $ws-tmux
bindsym $mod+Shift+4 move container to workspace $ws-nvim
bindsym $mod+Shift+5 move container to workspace $ws-comm
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# Follow focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws-browse, workspace $ws-browse
bindsym $mod+Ctrl+2 move container to workspace $ws-work, workspace $ws-work
bindsym $mod+Ctrl+3 move container to workspace $ws-tmux, workspace $ws-tmux
bindsym $mod+Ctrl+4 move container to workspace $ws-nvim, workspace $ws-nvim
bindsym $mod+Ctrl+5 move container to workspace $ws-comm, workspace $ws-comm
bindsym $mod+Ctrl+6 move container to workspace 6, workspace 6
bindsym $mod+Ctrl+7 move container to workspace 7, workspace 7
bindsym $mod+Ctrl+8 move container to workspace 8, workspace 8
bindsym $mod+Ctrl+9 move container to workspace 9, workspace 9
bindsym $mod+Ctrl+0 move container to workspace 10, workspace 0

workspace_auto_back_and_forth yes

############
### BOOT ###
############

# Don't set urgency on windows asking for focus on activation
focus_on_window_activation none

# Hide mouse while typing and after a timeout
exec --no-startup-id xbanish
exec --no-startup-id unclutter -b

# Touchpad settings
exec --no-startup-id synclient VertScrollDelta=-112 HorizScrollDelta=-112 MaxTapTime=0

# Load compton compositor
exec --no-startup-id compton -b

# Mopidy and script to enable ncmpcpp visualization
exec --no-startup-id mopidy &
exec --no-startup-id ~/bin/pipe-audio-viz

### Tray ###
exec --no-startup-id redshift-gtk
exec --no-startup-id blueman-applet
exec --no-startup-id nm-applet

### Browse ###
for_window [instance="^personal-browse$"] move workspace $ws-browse
exec RESOURCE_NAME=personal-browse qutebrowser --enable-webengine-inspector -r personal

### Work ###
for_window [instance="work-browse"] move workspace $ws-work
for_window [instance="^nvim$"] move workspace $ws-nvim
for_window [instance="^tmux$"] move workspace $ws-tmux

# Default workspace
workspace "$ws-browse" output DP-3

##################
### SCRATCHPAD ###
##################

set $mode-scratchpad "Scratchpad: [t]odo, [s]tandup, [d]otfiles, ncm[p]cpp, fran[z], si[g]nal, [m]utt, [n]ewsboat, [c]ancel"

mode $mode-scratchpad {
  bindsym b [class="^ProtonMail Bridge$"] scratchpad show, move position center, mode default
  bindsym t [instance="^todo-notes$"] scratchpad show, move position center, mode default
  bindsym s [instance="^standup-notes$"] scratchpad show, move position center, mode default
  bindsym d [instance="^dotfiles$"] scratchpad show, move position center, mode default
  bindsym m [instance="^neomutt$"] scratchpad show, move position center, mode default
  bindsym n [instance="^newsboat$"] scratchpad show, move position center, mode default
  bindsym p [class="^ncmpcpp$"] scratchpad show, move position center, mode default
  bindsym z [class="^Franz$"] scratchpad show, move position center, mode default
  bindsym g [class="^Signal$"] scratchpad show, move position center, mode default
  bindsym $mod+p scratchpad show, mode default

  bindsym c mode default
  bindsym Escape mode default
}

bindsym $mod+p mode $mode-scratchpad

for_window [class="^ProtonMail Bridge$"] border pixel 10, move to scratchpad
exec Desktop-Bridge

for_window [instance="^todo-notes$"] border pixel 10, move to scratchpad
exec kitty --class="todo-notes" -o background_opacity=0.85 nvim ~/Documents/todo.txt

# for_window [instance="^standup-notes$"] border pixel 10, move to scratchpad
# exec kitty --class="standup-notes" -o background_opacity=0.85 nvim ~/Documents/standup.txt

for_window [instance="^dotfiles$"] border pixel 10, move to scratchpad, resize set 1400 px 1000 px
exec kitty --class="dotfiles" -o background_opacity=0.85 nvim -S ~/dotfiles/Session.vim

for_window [instance="^neomutt$"] border pixel 10, move to scratchpad
exec kitty --class="neomutt" -o background_opacity=0.85 neomutt

for_window [instance="^newsboat$"] border pixel 10, move to scratchpad, resize set 800 px 1000 px
exec kitty --class="newsboat" -o background_opacity=0.85 -o font_size=14 newsboat

for_window [class="^ncmpcpp$"] border pixel 10, move to scratchpad
exec kitty --class="ncmpcpp" -o background_opacity=0.85 ncmpcpp

for_window [class="^Franz$"] border pixel 10, move to scratchpad, resize set 1400 px 1000 px
exec franz

for_window [class="^Signal$"] border pixel 10, move to scratchpad
exec signal-desktop

#######################
### SCREENSHOT MODE ###
#######################

set $mode-screenshot "Screenshot: [f]ull screen, [F]ull screen to clipboard, [s]election, [c]ancel"

mode $mode-screenshot {
  bindsym --release f exec "flameshot screen ~/Pictures/Screenshots", mode default
  bindsym --release s exec "flameshot gui", mode default
  bindsym --release Shift+f exec "flameshot screen -c", mode default
  bindsym c mode default
  bindsym Escape mode default
}

bindsym --release $mod+Shift+s mode $mode-screenshot

##################
### MEDIA KEYS ###
##################

bindsym XF86AudioPlay exec mpc toggle
bindsym XF86AudioPause exec mpc toggle
bindsym XF86AudioNext exec mpc next

bindsym XF86AudioLowerVolume exec /usr/bin/pactl set-sink-volume @DEFAULT_SINK@ '-5%'
bindsym XF86AudioRaiseVolume exec /usr/bin/pactl set-sink-volume @DEFAULT_SINK@ '+5%'
bindsym XF86AudioMute exec /usr/bin/pactl set-sink-mute @DEFAULT_SINK@ toggle

bindsym XF86MonBrightnessUp exec xbacklight -inc 5
bindsym XF86MonBrightnessDown exec xbacklight -dec 5

#############
### THEME ###
#############

exec --no-startup-id feh --bg-scale /home/redplateaus/Pictures/Wallpaper/glitch.jpg

# hide_edge_borders smart

set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676e7d
set $urgent-bg-color     #e53935

# # Window colors         border               background         text                 indicator
# client.focused          $inactive-text-color $bg-color          $text-color          $bg-color
# client.unfocused        $inactive-bg-color   $inactive-bg-color $inactive-text-color $inactive-bg-color
# client.focused_inactive $inactive-bg-color   $inactive-bg-color $inactive-text-color $inactive-bg-color
# client.urgent           $urgent-bg-color     $urgent-bg-color   $text-color          $bg-color

# Solarized
# With gaps, visual "borders" are actually the background; borders appear in stacked/etc
client.focused #859900 #859900 #fdf6e3 #859900
client.focused_inactive #85990044 #85990044 #eee8d5 #85990044
client.unfocused #85990044 #85990044 #93a1a1 #85990044
client.urgent #d33682 #d33682 #fdf6e3 #d33682

bar {
  status_command i3blocks -c ~/.i3blocks.conf
  tray_padding 0

  colors {
    # background $bg-color
    # separator #757575

    # # Attribute        border               background         text
    # focused_workspace  $inactive-text-color $bg-color          $text-color
    # inactive_workspace $inactive-bg-color   $inactive-bg-color $inactive-text-color
    # urgent_workspace   $urgent-bg-color     $urgent-bg-color   $text-color

    background #073642
    separator #eee8d5

    focused_workspace #859900 #859900 #fdf6e3
    active_workspace #859900 #073642 #eee8d5
    inactive_workspace #073642 #073642 #eee8d5
    urgent_workspace #d33682 #d33682 #fdf6e3
  }
}

set $border-default 5
set $gaps-default-inner 10
set $gaps-default-outer 10

new_window pixel $border-default
gaps inner $gaps-default-inner
gaps outer $gaps-default-outer

set $mode-gaps "Gaps: +/-/0/[d]efault"

mode $mode-gaps {
  bindsym plus   gaps inner current plus 5
  bindsym equals gaps inner current plus 5
  bindsym minus  gaps inner current minus 5
  bindsym 0 gaps inner current set 0
  bindsym d gaps inner current set $gaps-default-inner

  bindsym Escape mode "default"
}

bindsym $mod+g mode $mode-gaps

###################
### EXIT PROMPT ###
###################

set $mode-exit "Exit: [l]ock, l[o]gout, [r]eboot, [s]hutdown, [c]ancel"

mode $mode-exit {
  bindsym l mode default, exec i3lock-fancy -pt '' -- scrot
  bindsym o exec i3-msg exit
  bindsym r exec systemctl reboot
  bindsym s exec systemctl poweroff
  # bindsym h mode default, exec systemctl hibernate

  bindsym c mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+Shift+e mode $mode-exit
