# Prevent tmux from screwing up my PATH
# if [ -f /etc/profile ]; then
#   PATH=""
#   source /etc/profile
# fi

########################
### VERSION MANAGERS ###
########################

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
source /home/redplateaus/.pgvm/pgvm_env

export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"


############
### PATH ###
############

export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/usr/local/arduino:$PATH"
export PATH="./bin:$HOME/bin:$PATH"

###############
### ALIASES ###
###############

alias l="ls -l"
alias ll="ls -la"
alias ..="cd .."

alias be="bundle exec "
alias rg="bundle exec rails generate "
alias rd="bundle exec rails destroy "
alias alert="say done"
alias so="source ~/.bash_profile"
alias pss="ps ax | grep -v grep | grep "

alias agi="sudo apt-get install -y "

alias xbanish="~/vendor/xbanish/xbanish"

# Easily start and kill tmuxinator
# alias tstart="tmuxinator start "
# alias tkill="stop-services; tmux kill-session"

####################
### KEY BINDINGS ###
####################

# Use the same sequence Alacritty defaults to and Vim expects for
# backward/forward-word

bind '"\e[1;5D": backward-word'
bind '"\e[1;5C": forward-word'
bind '"\C-h": backward-kill-word'

################
### SETTINGS ###
################

HISTSIZE=100000
HISTFILESIZE=100000

# Don't put duplicate lines or lines starting with space in the history
HISTCONTROL=ignoreboth

# Append to the history file, don't overwrite it
shopt -s histappend

###########
### ENV ###
###########

export EDITOR="/usr/bin/nvim"
export GPG_TTY=`tty`

export RAILS_SYSTEM_TESTING_SCREENSHOT=inline
export ARDUINO_PATH=/usr/local/arduino

export WS_BROWSE=$(xrdb -query | grep i3.Workspaces.wsBrowse | cut -f2)
export WS_WORK=$(xrdb -query | grep i3.Workspaces.wsWork | cut -f2)
export WS_TMUX=$(xrdb -query | grep i3.Workspaces.wsTmux | cut -f2)
export WS_NVIM=$(xrdb -query | grep i3.Workspaces.wsNvim | cut -f2)
export WS_COMM=$(xrdb -query | grep i3.Workspaces.wsComm | cut -f2)

###################
### STATUS LINE ###
###################

function _update_ps1() {
  PS1=$(powerline-shell $?)
}

if [[ $TERM != linux && ! $PROMPT_COMMAND =~ _update_ps1 ]]; then
  PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
fi

###############
### SECRETS ###
###############

# Stuff that's not checked into dotfiles
source "$HOME/.bash_secret"
